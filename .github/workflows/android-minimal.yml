name: Minimal Android Build (Skip Native Modules)

on:
  workflow_dispatch:
    inputs:
      upload_to_s3:
        description: 'Upload APK to S3'
        required: false
        default: 'true'
        type: boolean

env:
  AWS_REGION: ca-central-1
  NODE_VERSION: '18'

jobs:
  build-android-minimal:
    name: Build Android APK (Minimal)
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Node dependencies (minimal)
        run: |
          echo "📦 Installing dependencies..."
          npm ci
          echo "✅ Dependencies installed"

      - name: Disable problematic native modules
        run: |
          echo "🔧 Temporarily disabling problematic native modules..."
          
          # Create a temporary react-native.config.js to exclude AWS Amplify native modules
          cat > react-native.config.js << 'EOF'
          module.exports = {
            dependencies: {
              '@aws-amplify/react-native': {
                platforms: {
                  android: {
                    sourceDir: null, // disable Android platform auto linking
                    packageImportPath: null, // disable package auto linking
                  },
                },
              },
            },
          };
          EOF
          
          echo "📝 Created react-native.config.js to exclude AWS Amplify native linking"

      - name: Setup Android SDK (simple)
        run: |
          echo "🔧 Setting up minimal Android SDK..."
          # Accept licenses
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
          # Install minimal components
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-34" "build-tools;34.0.0" || true

      - name: Make Gradlew executable
        run: |
          cd android
          chmod +x gradlew

      - name: Clean and build Android APK
        run: |
          echo "🔧 Building Android APK without problematic native modules..."
          cd android
          
          # Clean first
          ./gradlew clean --stacktrace || echo "Clean completed"
          
          # Build release APK
          ./gradlew assembleRelease --no-daemon --stacktrace
        env:
          GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx3g"'

      - name: Verify APK creation
        run: |
          APK_PATH="android/app/build/outputs/apk/release/app-release.apk"
          if [ -f "$APK_PATH" ]; then
            APK_SIZE=$(du -h "$APK_PATH" | cut -f1)
            echo "✅ APK created successfully!"
            echo "📁 Location: $APK_PATH"
            echo "📏 Size: $APK_SIZE"
          else
            echo "❌ APK not found"
            echo "🔍 Searching for APK files..."
            find android -name "*.apk" -type f || echo "No APK files found"
            exit 1
          fi

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-minimal-apk
          path: android/app/build/outputs/apk/release/app-release.apk
          retention-days: 30

      - name: Configure AWS credentials
        if: ${{ inputs.upload_to_s3 == true || inputs.upload_to_s3 == 'true' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload APK to S3
        if: ${{ inputs.upload_to_s3 == true || inputs.upload_to_s3 == 'true' }}
        run: |
          APK_PATH="android/app/build/outputs/apk/release/app-release.apk"
          BUCKET_NAME="qa-mytrainingapp-artifacts"
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          
          echo "📤 Uploading APK to S3..."
          
          # Upload APK with timestamp
          aws s3 cp $APK_PATH s3://$BUCKET_NAME/MyTrainingApp-qa-minimal-$TIMESTAMP.apk
          
          # Upload as latest
          aws s3 cp $APK_PATH s3://$BUCKET_NAME/MyTrainingApp-qa-latest.apk
          
          echo "🎉 APK uploaded successfully!"
          echo "🔗 Download: https://$BUCKET_NAME.s3.${{ env.AWS_REGION }}.amazonaws.com/MyTrainingApp-qa-latest.apk"

      - name: Cleanup
        if: always()
        run: |
          # Remove temporary config
          rm -f react-native.config.js || true

      - name: Summary
        run: |
          echo "📱 Minimal Android Build Summary:"
          echo "✅ APK built successfully (without AWS Amplify native modules)"
          echo "⚠️  Note: This APK may have limited AWS functionality"
          echo "🎯 Use for basic UI/UX testing"