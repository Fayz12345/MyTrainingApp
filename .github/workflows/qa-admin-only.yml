name: QA Admin Portal Only

on:
  workflow_dispatch: # Manual trigger only

env:
  AWS_REGION: ca-central-1
  NODE_VERSION: '18'

jobs:
  deploy-backend:
    name: Deploy Backend to QA
    runs-on: ubuntu-latest
    outputs:
      amplify-outputs: ${{ steps.deploy.outputs.amplify-outputs }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy QA Backend
        id: deploy
        run: |
          echo "Deploying QA backend..."
          npx @aws-amplify/backend-cli sandbox --identifier qa --once
          echo "amplify-outputs=$(cat amplify_outputs.json | base64 -w 0)" >> $GITHUB_OUTPUT

      - name: Upload amplify_outputs for admin portal
        uses: actions/upload-artifact@v4
        with:
          name: qa-amplify-outputs
          path: amplify_outputs.json

  deploy-admin-portal:
    name: Deploy Admin Portal to QA
    runs-on: ubuntu-latest
    needs: deploy-backend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: my-training-admin/package-lock.json

      - name: Download amplify_outputs
        uses: actions/download-artifact@v4
        with:
          name: qa-amplify-outputs
          path: my-training-admin/src/

      - name: Install admin portal dependencies
        run: |
          cd my-training-admin
          npm ci

      - name: Build admin portal
        env:
          CI: false  # Treat warnings as warnings, not errors
        run: |
          cd my-training-admin
          npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to S3 for QA
        run: |
          cd my-training-admin
          # Create QA admin portal bucket if it doesn't exist
          BUCKET_NAME="qa-mytrainingapp-admin-portal"
          aws s3 mb s3://$BUCKET_NAME --region ${{ env.AWS_REGION }} || true
          
          # Sync build files to S3 
          aws s3 sync build/ s3://$BUCKET_NAME --delete
          
          # Configure bucket for static website hosting
          aws s3 website s3://$BUCKET_NAME --index-document index.html --error-document index.html
          
          echo "âœ… Admin portal deployed to: http://$BUCKET_NAME.s3-website.${{ env.AWS_REGION }}.amazonaws.com"

  seed-test-data:
    name: Seed QA Test Data
    runs-on: ubuntu-latest
    needs: deploy-admin-portal
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Download amplify_outputs
        uses: actions/download-artifact@v4
        with:
          name: qa-amplify-outputs

      - name: Run test data seeding
        run: |
          echo "Seeding QA environment with test users..."
          npm run seed:qa
          echo "âœ… Test user seeding completed"

      - name: Summary
        run: |
          echo "ðŸŽ‰ QA Environment Ready!"
          echo ""
          echo "ðŸ“‹ Admin Portal: http://qa-mytrainingapp-admin-portal.s3-website.ca-central-1.amazonaws.com"
          echo "ðŸ”‘ Manager Login: qa-manager@testcompany.com / TempQAPass123!"
          echo "ðŸ‘¥ Employee Login: qa-employee1@testcompany.com / TempQAPass123!"
          echo ""
          echo "ðŸ“± Note: Android APK needs to be built separately"